"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = debug;

var _styleConsole = _interopRequireDefault(require("./styleConsole"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _ref = process && process.env || {},
    NODE_ENV = _ref.NODE_ENV;

function format(category, arg0) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  return ["%c".concat(category, "%c ").concat(arg0)].concat(_toConsumableArray((0, _styleConsole.default)('green', 'white')), args);
}

function debug(category) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref2$force = _ref2.force,
      force = _ref2$force === void 0 ? false : _ref2$force;

  if (!force && NODE_ENV !== 'development') {
    return function () {
      return 0;
    };
  }

  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    if (!args.length) {
      return;
    }

    var _args = args,
        _args2 = _slicedToArray(_args, 1),
        arg0 = _args2[0];

    if (typeof arg0 === 'function') {
      args = arg0();
    }

    var lines = Array.isArray(args[0]) ? args : [args];
    var oneLiner = lines.length === 1;
    lines.forEach(function (line, index) {
      if (oneLiner) {
        var _console;

        (_console = console).log.apply(_console, _toConsumableArray(format.apply(void 0, [category].concat(_toConsumableArray(line)))));
      } else if (index) {
        var _console2;

        (_console2 = console).log.apply(_console2, _toConsumableArray(Array.isArray(line) ? line : [line]));
      } else {
        var _console3;

        (_console3 = console).groupCollapsed.apply(_console3, _toConsumableArray(format.apply(void 0, [category].concat(_toConsumableArray(line)))));
      }
    });
    oneLiner || console.groupEnd();
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9kZWJ1Zy5qcyJdLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJmb3JtYXQiLCJjYXRlZ29yeSIsImFyZzAiLCJhcmdzIiwiZGVidWciLCJmb3JjZSIsImxlbmd0aCIsImxpbmVzIiwiQXJyYXkiLCJpc0FycmF5Iiwib25lTGluZXIiLCJmb3JFYWNoIiwibGluZSIsImluZGV4IiwiY29uc29sZSIsImxvZyIsImdyb3VwQ29sbGFwc2VkIiwiZ3JvdXBFbmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1dBRXNCQSxPQUFPLElBQUlBLE9BQU8sQ0FBQ0MsR0FBcEIsSUFBNEIsRTtJQUF6Q0MsUSxRQUFBQSxROztBQUVSLFNBQVNDLE1BQVQsQ0FBZ0JDLFFBQWhCLEVBQTBCQyxJQUExQixFQUF5QztBQUFBLG9DQUFOQyxJQUFNO0FBQU5BLElBQUFBLElBQU07QUFBQTs7QUFDdkMsc0JBQWFGLFFBQWIsZ0JBQTJCQyxJQUEzQiw2QkFBc0MsMkJBQWEsT0FBYixFQUFzQixPQUF0QixDQUF0QyxHQUF5RUMsSUFBekU7QUFDRDs7QUFFYyxTQUFTQyxLQUFULENBQWVILFFBQWYsRUFBaUQ7QUFBQSxrRkFBSixFQUFJO0FBQUEsMEJBQXRCSSxLQUFzQjtBQUFBLE1BQXRCQSxLQUFzQiw0QkFBZCxLQUFjOztBQUM5RCxNQUFJLENBQUNBLEtBQUQsSUFBVU4sUUFBUSxLQUFLLGFBQTNCLEVBQTBDO0FBQ3hDLFdBQU87QUFBQSxhQUFNLENBQU47QUFBQSxLQUFQO0FBQ0Q7O0FBRUQsU0FBTyxZQUFhO0FBQUEsdUNBQVRJLElBQVM7QUFBVEEsTUFBQUEsSUFBUztBQUFBOztBQUNsQixRQUFJLENBQUNBLElBQUksQ0FBQ0csTUFBVixFQUFrQjtBQUNoQjtBQUNEOztBQUhpQixnQkFLSEgsSUFMRztBQUFBO0FBQUEsUUFLWEQsSUFMVzs7QUFPbEIsUUFBSSxPQUFPQSxJQUFQLEtBQWdCLFVBQXBCLEVBQWdDO0FBQzlCQyxNQUFBQSxJQUFJLEdBQUdELElBQUksRUFBWDtBQUNEOztBQUVELFFBQU1LLEtBQUssR0FBR0MsS0FBSyxDQUFDQyxPQUFOLENBQWNOLElBQUksQ0FBQyxDQUFELENBQWxCLElBQXlCQSxJQUF6QixHQUFnQyxDQUFDQSxJQUFELENBQTlDO0FBQ0EsUUFBTU8sUUFBUSxHQUFHSCxLQUFLLENBQUNELE1BQU4sS0FBaUIsQ0FBbEM7QUFFQUMsSUFBQUEsS0FBSyxDQUFDSSxPQUFOLENBQWMsVUFBQ0MsSUFBRCxFQUFPQyxLQUFQLEVBQWlCO0FBQzdCLFVBQUlILFFBQUosRUFBYztBQUFBOztBQUNaLG9CQUFBSSxPQUFPLEVBQUNDLEdBQVIsb0NBQWVmLE1BQU0sTUFBTixVQUFPQyxRQUFQLDRCQUFvQlcsSUFBcEIsR0FBZjtBQUNELE9BRkQsTUFFTyxJQUFJQyxLQUFKLEVBQVc7QUFBQTs7QUFDaEIscUJBQUFDLE9BQU8sRUFBQ0MsR0FBUixxQ0FBZ0JQLEtBQUssQ0FBQ0MsT0FBTixDQUFjRyxJQUFkLElBQXNCQSxJQUF0QixHQUE2QixDQUFDQSxJQUFELENBQTdDO0FBQ0QsT0FGTSxNQUVBO0FBQUE7O0FBQ0wscUJBQUFFLE9BQU8sRUFBQ0UsY0FBUixxQ0FBMEJoQixNQUFNLE1BQU4sVUFBT0MsUUFBUCw0QkFBb0JXLElBQXBCLEdBQTFCO0FBQ0Q7QUFDRixLQVJEO0FBVUFGLElBQUFBLFFBQVEsSUFBSUksT0FBTyxDQUFDRyxRQUFSLEVBQVo7QUFDRCxHQXpCRDtBQTBCRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBuby1jb25zb2xlOiBbXCJvZmZcIl0gKi9cbi8qIGdsb2JhbCBwcm9jZXNzICovXG5cbmltcG9ydCBzdHlsZUNvbnNvbGUgZnJvbSAnLi9zdHlsZUNvbnNvbGUnO1xuXG5jb25zdCB7IE5PREVfRU5WIH0gPSAocHJvY2VzcyAmJiBwcm9jZXNzLmVudikgfHwge307XG5cbmZ1bmN0aW9uIGZvcm1hdChjYXRlZ29yeSwgYXJnMCwgLi4uYXJncykge1xuICByZXR1cm4gW2AlYyR7Y2F0ZWdvcnl9JWMgJHthcmcwfWAsIC4uLnN0eWxlQ29uc29sZSgnZ3JlZW4nLCAnd2hpdGUnKSwgLi4uYXJnc107XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRlYnVnKGNhdGVnb3J5LCB7IGZvcmNlID0gZmFsc2UgfSA9IHt9KSB7XG4gIGlmICghZm9yY2UgJiYgTk9ERV9FTlYgIT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICByZXR1cm4gKCkgPT4gMDtcbiAgfVxuXG4gIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgIGlmICghYXJncy5sZW5ndGgpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBbYXJnMF0gPSBhcmdzO1xuXG4gICAgaWYgKHR5cGVvZiBhcmcwID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBhcmdzID0gYXJnMCgpO1xuICAgIH1cblxuICAgIGNvbnN0IGxpbmVzID0gQXJyYXkuaXNBcnJheShhcmdzWzBdKSA/IGFyZ3MgOiBbYXJnc107XG4gICAgY29uc3Qgb25lTGluZXIgPSBsaW5lcy5sZW5ndGggPT09IDE7XG5cbiAgICBsaW5lcy5mb3JFYWNoKChsaW5lLCBpbmRleCkgPT4ge1xuICAgICAgaWYgKG9uZUxpbmVyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKC4uLmZvcm1hdChjYXRlZ29yeSwgLi4ubGluZSkpO1xuICAgICAgfSBlbHNlIGlmIChpbmRleCkge1xuICAgICAgICBjb25zb2xlLmxvZyguLi4oQXJyYXkuaXNBcnJheShsaW5lKSA/IGxpbmUgOiBbbGluZV0pKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUuZ3JvdXBDb2xsYXBzZWQoLi4uZm9ybWF0KGNhdGVnb3J5LCAuLi5saW5lKSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBvbmVMaW5lciB8fCBjb25zb2xlLmdyb3VwRW5kKCk7XG4gIH07XG59XG4iXX0=