"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useScrollToEnd = _interopRequireDefault(require("../hooks/useScrollToEnd"));

var _useSticky3 = _interopRequireDefault(require("../hooks/useSticky"));

var _useStyleToClassName = _interopRequireDefault(require("../hooks/internal/useStyleToClassName"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ROOT_STYLE = {
  backgroundColor: 'rgba(0, 0, 0, .2)',
  borderRadius: 10,
  borderWidth: 0,
  bottom: 5,
  cursor: 'pointer',
  height: 20,
  outline: 0,
  position: 'absolute',
  right: 20,
  width: 20,
  '&:hover': {
    backgroundColor: 'rgba(0, 0, 0, .4)'
  },
  '&:active': {
    backgroundColor: 'rgba(0, 0, 0, .6)'
  }
};

var AutoHideFollowButton = function AutoHideFollowButton(_ref) {
  var children = _ref.children,
      className = _ref.className;

  var _useSticky = (0, _useSticky3.default)(),
      _useSticky2 = _slicedToArray(_useSticky, 1),
      sticky = _useSticky2[0];

  var rootCSS = (0, _useStyleToClassName.default)()(ROOT_STYLE);
  var scrollToEnd = (0, _useScrollToEnd.default)();
  return !sticky && /*#__PURE__*/_react.default.createElement("button", {
    className: (0, _classnames.default)(rootCSS, (className || '') + ''),
    onClick: scrollToEnd,
    type: "button"
  }, children);
};

AutoHideFollowButton.defaultProps = {
  children: undefined,
  className: ''
};
AutoHideFollowButton.propTypes = {
  children: _propTypes.default.any,
  className: _propTypes.default.string
};
var _default = AutoHideFollowButton;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TY3JvbGxUb0JvdHRvbS9BdXRvSGlkZUZvbGxvd0J1dHRvbi5qcyJdLCJuYW1lcyI6WyJST09UX1NUWUxFIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyV2lkdGgiLCJib3R0b20iLCJjdXJzb3IiLCJoZWlnaHQiLCJvdXRsaW5lIiwicG9zaXRpb24iLCJyaWdodCIsIndpZHRoIiwiQXV0b0hpZGVGb2xsb3dCdXR0b24iLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsInN0aWNreSIsInJvb3RDU1MiLCJzY3JvbGxUb0VuZCIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImFueSIsInN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsVUFBVSxHQUFHO0FBQ2pCQyxFQUFBQSxlQUFlLEVBQUUsbUJBREE7QUFFakJDLEVBQUFBLFlBQVksRUFBRSxFQUZHO0FBR2pCQyxFQUFBQSxXQUFXLEVBQUUsQ0FISTtBQUlqQkMsRUFBQUEsTUFBTSxFQUFFLENBSlM7QUFLakJDLEVBQUFBLE1BQU0sRUFBRSxTQUxTO0FBTWpCQyxFQUFBQSxNQUFNLEVBQUUsRUFOUztBQU9qQkMsRUFBQUEsT0FBTyxFQUFFLENBUFE7QUFRakJDLEVBQUFBLFFBQVEsRUFBRSxVQVJPO0FBU2pCQyxFQUFBQSxLQUFLLEVBQUUsRUFUVTtBQVVqQkMsRUFBQUEsS0FBSyxFQUFFLEVBVlU7QUFZakIsYUFBVztBQUNUVCxJQUFBQSxlQUFlLEVBQUU7QUFEUixHQVpNO0FBZ0JqQixjQUFZO0FBQ1ZBLElBQUFBLGVBQWUsRUFBRTtBQURQO0FBaEJLLENBQW5COztBQXFCQSxJQUFNVSxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQXVCLE9BQTZCO0FBQUEsTUFBMUJDLFFBQTBCLFFBQTFCQSxRQUEwQjtBQUFBLE1BQWhCQyxTQUFnQixRQUFoQkEsU0FBZ0I7O0FBQUEsbUJBQ3ZDLDBCQUR1QztBQUFBO0FBQUEsTUFDakRDLE1BRGlEOztBQUV4RCxNQUFNQyxPQUFPLEdBQUcsb0NBQXNCZixVQUF0QixDQUFoQjtBQUNBLE1BQU1nQixXQUFXLEdBQUcsOEJBQXBCO0FBRUEsU0FDRSxDQUFDRixNQUFELGlCQUNFO0FBQVEsSUFBQSxTQUFTLEVBQUUseUJBQVdDLE9BQVgsRUFBb0IsQ0FBQ0YsU0FBUyxJQUFJLEVBQWQsSUFBb0IsRUFBeEMsQ0FBbkI7QUFBZ0UsSUFBQSxPQUFPLEVBQUVHLFdBQXpFO0FBQXNGLElBQUEsSUFBSSxFQUFDO0FBQTNGLEtBQ0dKLFFBREgsQ0FGSjtBQU9ELENBWkQ7O0FBY0FELG9CQUFvQixDQUFDTSxZQUFyQixHQUFvQztBQUNsQ0wsRUFBQUEsUUFBUSxFQUFFTSxTQUR3QjtBQUVsQ0wsRUFBQUEsU0FBUyxFQUFFO0FBRnVCLENBQXBDO0FBS0FGLG9CQUFvQixDQUFDUSxTQUFyQixHQUFpQztBQUMvQlAsRUFBQUEsUUFBUSxFQUFFUSxtQkFBVUMsR0FEVztBQUUvQlIsRUFBQUEsU0FBUyxFQUFFTyxtQkFBVUU7QUFGVSxDQUFqQztlQUtlWCxvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VTY3JvbGxUb0VuZCBmcm9tICcuLi9ob29rcy91c2VTY3JvbGxUb0VuZCc7XG5pbXBvcnQgdXNlU3RpY2t5IGZyb20gJy4uL2hvb2tzL3VzZVN0aWNreSc7XG5pbXBvcnQgdXNlU3R5bGVUb0NsYXNzTmFtZSBmcm9tICcuLi9ob29rcy9pbnRlcm5hbC91c2VTdHlsZVRvQ2xhc3NOYW1lJztcblxuY29uc3QgUk9PVF9TVFlMRSA9IHtcbiAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgwLCAwLCAwLCAuMiknLFxuICBib3JkZXJSYWRpdXM6IDEwLFxuICBib3JkZXJXaWR0aDogMCxcbiAgYm90dG9tOiA1LFxuICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgaGVpZ2h0OiAyMCxcbiAgb3V0bGluZTogMCxcbiAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gIHJpZ2h0OiAyMCxcbiAgd2lkdGg6IDIwLFxuXG4gICcmOmhvdmVyJzoge1xuICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMCwgMCwgMCwgLjQpJ1xuICB9LFxuXG4gICcmOmFjdGl2ZSc6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIC42KSdcbiAgfVxufTtcblxuY29uc3QgQXV0b0hpZGVGb2xsb3dCdXR0b24gPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lIH0pID0+IHtcbiAgY29uc3QgW3N0aWNreV0gPSB1c2VTdGlja3koKTtcbiAgY29uc3Qgcm9vdENTUyA9IHVzZVN0eWxlVG9DbGFzc05hbWUoKShST09UX1NUWUxFKTtcbiAgY29uc3Qgc2Nyb2xsVG9FbmQgPSB1c2VTY3JvbGxUb0VuZCgpO1xuXG4gIHJldHVybiAoXG4gICAgIXN0aWNreSAmJiAoXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhyb290Q1NTLCAoY2xhc3NOYW1lIHx8ICcnKSArICcnKX0gb25DbGljaz17c2Nyb2xsVG9FbmR9IHR5cGU9XCJidXR0b25cIj5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9idXR0b24+XG4gICAgKVxuICApO1xufTtcblxuQXV0b0hpZGVGb2xsb3dCdXR0b24uZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogdW5kZWZpbmVkLFxuICBjbGFzc05hbWU6ICcnXG59O1xuXG5BdXRvSGlkZUZvbGxvd0J1dHRvbi5wcm9wVHlwZXMgPSB7XG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMuYW55LFxuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEF1dG9IaWRlRm9sbG93QnV0dG9uO1xuIl19