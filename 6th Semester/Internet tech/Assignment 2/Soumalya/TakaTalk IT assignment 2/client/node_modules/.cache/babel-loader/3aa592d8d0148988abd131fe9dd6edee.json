{"ast":null,"code":"var _jsxFileName = \"/home/soumalya/Desktop/MotherFolder/6th sem/Internet Tech/Assignment 2/Project/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); // returns a json and we are restructing the object to name=name and room=room\n    // we also could have const data = ... and data.room or data.name\n\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    console.log(socket);\n  }, [ENDPOINT, location.search]); // basically if they changes we need to rerender the whole part\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"d0IL40A6in8C0M9kpYxzMuyI8u0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/soumalya/Desktop/MotherFolder/6th sem/Internet Tech/Assignment 2/Project/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","queryString","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,QAAQ,GAAG,gBAAjB;AAGAV,EAAAA,SAAS,CAAC,MAAI;AAEV,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBN,WAAW,CAACS,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAvB,CAFU,CAGV;AACA;;AAEAT,IAAAA,MAAM,GAAGF,EAAE,CAACS,QAAD,CAAX;AACAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEH,GAZQ,EAYN,CAACO,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAZM,CAAT,CAP2B,CAoB3B;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAxBD;;GAAMR,I;;KAAAA,I;AAyBN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport queryString from 'query-string';\n\nlet socket;\n\nconst Chat = ({ location }) => {\n\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const ENDPOINT = 'localhost:5000';\n        \n\n    useEffect(()=>{\n\n        const { name, room } = queryString.parse(location.search);\n        // returns a json and we are restructing the object to name=name and room=room\n        // we also could have const data = ... and data.room or data.name\n        \n        socket = io(ENDPOINT);\n        setName(name);\n        setRoom(room);\n\n        console.log(socket);\n       \n    }, [ENDPOINT, location.search]);\n    // basically if they changes we need to rerender the whole part\n    return (\n        <h1>Chat</h1>\n    )\n};\nexport default Chat;"]},"metadata":{},"sourceType":"module"}