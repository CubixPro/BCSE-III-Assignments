{"ast":null,"code":"var _jsxFileName = \"/home/samarpan/Semester Materials/BCSE-III-Assignments/6th Semester/Internet tech/Assignment 2/Arko/Client/src/components/dashboard.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport '../styles/dashboard.css';\nimport Message from './message';\nimport Image from './image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super();\n    socket = io('http://localhost:5000', {\n      withCredentials: true\n    });\n    this.state = {\n      name: props.location.state.name,\n      currRoom: null,\n      users: null,\n      rooms: null,\n      usersBool: false,\n      roomsBool: false,\n      newRoomBool: false,\n      chatBool: false,\n      messages: [],\n      currMessage: '',\n      usersInCurrRoom: [],\n      redirect: false,\n      file: null,\n      imageSrc: null\n    };\n    this.toggleUsers = this.toggleUsers.bind(this);\n    this.toggleRooms = this.toggleRooms.bind(this);\n    this.toggleNewRoom = this.toggleNewRoom.bind(this);\n    this.createNewRoom = this.createNewRoom.bind(this);\n    this.userLogout = this.userLogout.bind(this);\n    this.switchRoom = this.switchRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.addImage = this.addImage.bind(this);\n    this.leaveRoom = this.leaveRoom.bind(this);\n    socket.emit('addId', {\n      name: props.location.state.name\n    });\n  }\n\n  componentDidMount() {\n    socket.on('message', message => {\n      this.setState({\n        messages: [...this.state.messages, message]\n      });\n    });\n    socket.on('roomData', ({\n      room,\n      users\n    }) => {\n      this.setState({\n        usersInCurrRoom: users\n      });\n    });\n  }\n\n  toggleUsers() {\n    socket.emit('getUsers', users => {\n      let change = !this.state.usersBool;\n      this.setState({\n        users: users,\n        usersBool: change\n      });\n    });\n  }\n\n  toggleRooms() {\n    socket.emit('getRooms', rooms => {\n      let change = !this.state.roomsBool;\n      this.setState({\n        rooms: rooms,\n        roomsBool: change\n      });\n    });\n  }\n\n  toggleNewRoom() {\n    let change = !this.state.newRoomBool;\n    this.setState({\n      newRoomBool: change\n    });\n  }\n\n  leaveRoom() {\n    socket.emit('leaveRoom', {\n      roomName: this.state.currRoom,\n      name: this.state.name\n    }, () => {\n      console.log(`${this.state.name} has left the room`);\n      this.setState({\n        chatBool: false,\n        currRoom: null,\n        messages: [],\n        currMessage: '',\n        usersInCurrRoom: []\n      });\n    });\n  }\n\n  createNewRoom(roomName) {\n    socket.emit('newRoom', {\n      roomName: roomName,\n      name: this.state.name\n    }, ({\n      newRoom,\n      error\n    }) => {\n      if (error) console.log(error);else {\n        this.setState({\n          chatBool: true,\n          currRoom: newRoom.room,\n          messages: [],\n          currMessage: '',\n          usersInCurrRoom: []\n        }, () => {\n          socket.emit('join', {\n            name: this.state.name,\n            room: this.state.currRoom\n          });\n        });\n      }\n    });\n  }\n\n  switchRoom(room) {\n    if (!this.state.currRoom) {\n      this.setState({\n        chatBool: true,\n        currRoom: room\n      }, () => {\n        socket.emit('join', {\n          name: this.state.name,\n          room: this.state.currRoom\n        });\n      });\n    } else if (this.state.currRoom !== room) {\n      socket.emit('leaveRoom', {\n        roomName: this.state.currRoom,\n        name: this.state.name\n      }, () => {\n        console.log(`${this.state.name} has left the room`);\n        this.setState({\n          currRoom: room,\n          messages: [],\n          currMessage: '',\n          usersInCurrRoom: []\n        }, () => {\n          socket.emit('join', {\n            name: this.state.name,\n            room: this.state.currRoom\n          });\n        });\n      });\n    }\n  }\n\n  userLogout() {\n    if (this.state.currRoom) {\n      socket.emit('leaveRoom', {\n        roomName: this.state.currRoom,\n        name: this.state.name\n      }, () => {\n        console.log(`${this.state.name} has left the room`);\n      });\n    }\n\n    socket.emit('logout', () => {\n      console.log('Logged out successfully');\n      this.setState({\n        redirect: true,\n        chatBool: false,\n        currRoom: null\n      });\n    });\n  }\n\n  sendMessage(event) {\n    event.preventDefault();\n\n    if (this.state.file) {\n      let name = this.state.file.name;\n      const blob = new Blob([this.state.file], {\n        type: this.state.file.type\n      });\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n\n      reader.onload = () => {\n        console.log(reader.result);\n        this.setState({\n          imageSrc: reader.result\n        }, () => {\n          socket.emit('sendMessageWithImage', {\n            room: this.state.currRoom,\n            message: this.state.currMessage,\n            image: this.state.imageSrc,\n            imageName: name\n          });\n        });\n      };\n    } else if (this.state.currMessage) socket.emit('sendMessage', {\n      room: this.state.currRoom,\n      message: this.state.currMessage\n    });\n\n    this.setState({\n      currMessage: '',\n      file: null,\n      imageSrc: null\n    });\n  }\n\n  addImage(files) {\n    this.setState({\n      file: files[0]\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      socket.disconnect();\n      socket.off();\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 20\n      }, this);\n    }\n\n    const showUsers = () => {\n      if (this.state.usersBool) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.users.map((user, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"roomList\",\n                children: user.username\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"Join\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this);\n    };\n\n    const showRooms = () => {\n      if (this.state.roomsBool) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.rooms.map((room, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"roomList\",\n                children: room.room\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.switchRoom(room.room),\n                children: \"Join\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }, this);\n    };\n\n    const createRoom = () => {\n      if (this.state.newRoomBool) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"newRoomInput\",\n            type: \"text\",\n            placeholder: \"New Room Name\",\n            id: \"new-room-name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.createNewRoom(document.getElementById('new-room-name').value);\n              document.getElementById('new-room-name').value = '';\n            },\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }, this);\n    };\n\n    const messages = () => {\n      return this.state.messages.map((message, index) => {\n        if (message.image) return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            message: message,\n            name: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 63\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 46\n        }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            message: message,\n            name: this.state.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 50\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 33\n        }, this);\n      });\n    };\n\n    const showChatBox = () => {\n      if (this.state.chatBool) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatBar\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: this.state.currRoom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"leaveBtn\",\n              onClick: () => this.leaveRoom(),\n              children: \"Leave Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memberDetails\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Members : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), this.state.usersInCurrRoom.map((user, index) => {\n              if (index === 0) return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 56\n              }, this);else return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\", \", user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 45\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n            className: \"messages\",\n            children: messages()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              id: \"text-bar\",\n              type: \"text\",\n              placeholder: \"Type a message\",\n              value: this.state.currMessage,\n              autoComplete: \"off\",\n              onChange: ({\n                target: {\n                  value\n                }\n              }) => this.setState({\n                currMessage: value\n              }),\n              onKeyPress: event => {\n                if (event.key === 'Enter') {\n                  this.sendMessage(event);\n                  document.getElementById('text-bar').value = '';\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sendButton\",\n              onClick: e => {\n                document.getElementById('text-bar').value = '';\n                this.sendMessage(e);\n              },\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"image-input\",\n              id: \"fileDialog\",\n              type: \"file\",\n              onChange: ({\n                target: {\n                  files\n                }\n              }) => {\n                this.addImage(files);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatInitial\",\n        children: \"Start a Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"OuterContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DashboardList\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"DashboardUser\",\n          children: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboardButtons\",\n          onClick: () => this.toggleRooms(),\n          children: \"Start Group Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboardItems\",\n          children: showRooms()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboardButtons\",\n          onClick: () => this.toggleNewRoom(),\n          children: \"Create New Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboardItems\",\n          children: createRoom()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboardButtons logoutButton\",\n          onClick: () => this.userLogout(),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DashboardChat\",\n        children: showChatBox()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/samarpan/Semester Materials/BCSE-III-Assignments/6th Semester/Internet tech/Assignment 2/Arko/Client/src/components/dashboard.js"],"names":["React","Component","Redirect","io","ScrollToBottom","Message","Image","socket","Dashboard","constructor","props","withCredentials","state","name","location","currRoom","users","rooms","usersBool","roomsBool","newRoomBool","chatBool","messages","currMessage","usersInCurrRoom","redirect","file","imageSrc","toggleUsers","bind","toggleRooms","toggleNewRoom","createNewRoom","userLogout","switchRoom","sendMessage","addImage","leaveRoom","emit","componentDidMount","on","message","setState","room","change","roomName","console","log","newRoom","error","event","preventDefault","blob","Blob","type","reader","FileReader","readAsDataURL","onload","result","image","imageName","files","render","disconnect","off","showUsers","map","user","index","username","showRooms","createRoom","document","getElementById","value","showChatBox","target","key","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport '../styles/dashboard.css';\n\nimport Message from './message';\nimport Image from './image';\nlet socket;\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super();\n        socket = io('http://localhost:5000', { withCredentials: true });\n\n        this.state = {\n            name: props.location.state.name,\n            currRoom: null,\n            users: null,\n            rooms: null,\n            usersBool: false,\n            roomsBool: false,\n            newRoomBool: false,\n            chatBool: false,\n            messages: [],\n            currMessage: '',\n            usersInCurrRoom: [],\n            redirect: false,\n            file: null,\n            imageSrc: null,\n        }\n        this.toggleUsers = this.toggleUsers.bind(this);\n        this.toggleRooms = this.toggleRooms.bind(this);\n        this.toggleNewRoom = this.toggleNewRoom.bind(this);\n        this.createNewRoom = this.createNewRoom.bind(this);\n        this.userLogout = this.userLogout.bind(this);\n        this.switchRoom = this.switchRoom.bind(this);\n        this.sendMessage = this.sendMessage.bind(this);\n        this.addImage = this.addImage.bind(this);\n        this.leaveRoom = this.leaveRoom.bind(this);\n\n        socket.emit('addId', {name: props.location.state.name});\n    }\n\n    componentDidMount() {\n\n        socket.on('message', message => {\n            this.setState({\n                messages: [...this.state.messages, message]\n            });\n        });\n    \n        socket.on('roomData', ({ room, users}) => {\n            this.setState({ usersInCurrRoom: users});\n        });\n    }\n\n    toggleUsers() {\n        socket.emit('getUsers', (users) => {\n            let change = !this.state.usersBool;\n            this.setState({\n                users: users,\n                usersBool: change\n            });\n        });      \n    }\n\n    toggleRooms() {\n        socket.emit('getRooms', (rooms) => {\n            let change = !this.state.roomsBool;\n            this.setState({\n                rooms: rooms,\n                roomsBool: change\n            });\n        });\n    }\n\n    toggleNewRoom() {\n        let change = !this.state.newRoomBool;\n        this.setState({ newRoomBool: change});\n    }\n\n    leaveRoom() {\n        socket.emit('leaveRoom', {roomName: this.state.currRoom, name: this.state.name}, () => {\n            console.log(`${this.state.name} has left the room`);\n            this.setState({\n                chatBool: false,\n                currRoom: null,\n                messages: [],\n                currMessage: '',\n                usersInCurrRoom: []\n            })\n        })\n    }\n\n    createNewRoom(roomName) {\n        socket.emit('newRoom', {roomName: roomName, name: this.state.name}, ({newRoom, error}) => {\n            if(error) console.log(error);\n            else{\n                this.setState({ \n                    chatBool: true,\n                    currRoom: newRoom.room,\n                    messages: [],\n                    currMessage: '',\n                    usersInCurrRoom: []\n                }, () => {\n                    socket.emit('join', { name: this.state.name, room: this.state.currRoom })\n                })\n            }\n        });\n    }\n\n    switchRoom(room) {\n\n        if(!this.state.currRoom) {\n            this.setState({ \n                chatBool: true, \n                currRoom: room \n            }, () => {\n                socket.emit('join', { name: this.state.name, room: this.state.currRoom })\n            })\n        }\n        else if(this.state.currRoom !== room) {\n            socket.emit('leaveRoom', {roomName: this.state.currRoom, name: this.state.name}, () => {\n                console.log(`${this.state.name} has left the room`);\n                this.setState({currRoom: room,\n                            messages: [],\n                            currMessage: '',\n                            usersInCurrRoom: []}, () => {\n                            socket.emit('join', { name: this.state.name, room: this.state.currRoom })\n                        });\n            }) \n        }\n    }\n\n    userLogout() {\n        if(this.state.currRoom) {\n            socket.emit('leaveRoom', {roomName: this.state.currRoom, name: this.state.name}, () => {\n                console.log(`${this.state.name} has left the room`);\n            })\n        }\n        socket.emit('logout', () => {\n            console.log('Logged out successfully');\n            this.setState({\n                redirect: true,\n                chatBool: false,\n                currRoom: null,\n            })\n        })\n    }\n\n    sendMessage(event) {\n        event.preventDefault();\n        if(this.state.file) {\n            let name = this.state.file.name;\n            const blob = new Blob([this.state.file], {type: this.state.file.type}) \n            const reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onload = () => {\n                console.log(reader.result);\n                this.setState({ imageSrc: reader.result }, () => {\n                    socket.emit('sendMessageWithImage', {room: this.state.currRoom, message: this.state.currMessage, image: this.state.imageSrc, imageName: name});\n                });\n            };\n        } \n        else if(this.state.currMessage) socket.emit('sendMessage', {room: this.state.currRoom, message: this.state.currMessage});\n            \n        this.setState({ currMessage: '', file: null, imageSrc: null});\n    }\n\n    addImage(files) {\n        this.setState({ file: files[0] })\n    }\n\n    render() {\n        if (this.state.redirect) {\n            socket.disconnect()\n            socket.off();\n            return <Redirect to= '/' />\n        }\n\n        const showUsers = (() => {\n            if(this.state.usersBool) {\n                return (\n                    <div>\n                        {this.state.users.map((user, index) => {\n                            return (\n                                <div>\n                                    <span className=\"roomList\" key={index}>{user.username}</span>\n                                    <button>Join</button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n            }\n            else return <div></div>\n        })\n\n        const showRooms = (() => {\n            if(this.state.roomsBool) {\n                return (\n                    <div>\n                        {this.state.rooms.map((room, index) => {\n                            return (\n                                <div>\n                                    <span className=\"roomList\">{room.room}</span>\n                                    <button key={index} onClick= {() => this.switchRoom(room.room)}>Join</button>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n            }\n            else return <div></div>\n        })\n\n        const createRoom = (() => {\n            if(this.state.newRoomBool) {\n                return (\n                    <div>\n                        <input className=\"newRoomInput\" type=\"text\" placeholder=\"New Room Name\" id=\"new-room-name\" />\n                        <button onClick={ () => {\n                            this.createNewRoom(document.getElementById('new-room-name').value);\n                            document.getElementById('new-room-name').value = '';\n                        }}>Create</button>\n                    </div>\n                )\n            }\n            else return <div></div>\n        })\n\n        const messages = () => {\n            return (\n                this.state.messages.map((message, index) => {\n                    if(message.image) return <div key={index}><Image message={message} name={this.state.name} /></div>\n                    else return <div key={index}><Message message={message} name={this.state.name} /></div>\n                })                 \n            )\n        }\n\n        const showChatBox = () => {\n            if(this.state.chatBool) {\n\n                return(\n                    <div className=\"container\">\n                        <div className=\"chatBar\">\n                            <h2>{this.state.currRoom}</h2>\n                            <button className=\"leaveBtn\" onClick={() => this.leaveRoom()} >Leave Room</button>\n                        </div>\n                        <div className=\"memberDetails\">\n                            <span>Members : </span>\n                            {this.state.usersInCurrRoom.map((user, index) => {\n                                if(index === 0) return <span>{user.username}</span>\n                                else return <span>, {user.username}</span>\n                            })}\n                        </div>\n                        <ScrollToBottom className=\"messages\">\n                            {messages()}\n                        </ScrollToBottom>\n                        <form className=\"form\">\n                            <input\n                                className=\"input\"\n                                id=\"text-bar\"\n                                type=\"text\"\n                                placeholder=\"Type a message\"\n                                value={this.state.currMessage}\n                                autoComplete='off'\n                                onChange={({ target: { value } }) => this.setState({ currMessage: value})}\n                                onKeyPress={event => {\n                                    if(event.key === 'Enter') {\n                                        this.sendMessage(event);\n                                        document.getElementById('text-bar').value = '';\n                                    }}\n                                }\n                            />\n                            <button className=\"sendButton\" onClick={e => {document.getElementById('text-bar').value = ''; this.sendMessage(e)} }>Send</button>\n                            <input \n                                className=\"image-input\"\n                                id=\"fileDialog\" \n                                type=\"file\" \n                                onChange={({ target: { files } }) => {\n                                    this.addImage(files);\n                                }}/>\n                        </form>\n                    </div>\n                )\n            }\n            else return <div className=\"chatInitial\">Start a Chat</div>\n        }\n\n        return(\n            <div className=\"OuterContainer\">\n                <div className=\"DashboardList\">\n                    <h2 className=\"DashboardUser\">{this.state.name}</h2>\n                    {/* <button className=\"dashboardButtons\" onClick={() => this.toggleUsers()}>Start Personal Chat</button>\n                    <div className=\"dashboardItems\">{showUsers()}</div> */}\n                    <button className=\"dashboardButtons\" onClick={() => this.toggleRooms()}>Start Group Chat</button>\n                    <div className=\"dashboardItems\">{showRooms()}</div>\n                    <button className=\"dashboardButtons\" onClick={() => this.toggleNewRoom()}>Create New Group</button>\n                    <div className=\"dashboardItems\">{createRoom()}</div>\n                    <button className=\"dashboardButtons logoutButton\" onClick={() => this.userLogout()}>Logout</button>\n                </div>\n                <div className=\"DashboardChat\">{showChatBox()}</div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}