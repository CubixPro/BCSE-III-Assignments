{"ast":null,"code":"var _jsxFileName = \"/home/samarpan/Semester Materials/BCSE-III-Assignments/6th Semester/Internet tech/Assignment 2/Bitanu/client/src/components/Home.js\";\nimport socket from \"../socket.js\";\nimport Chat from \"./Chat.js\";\nimport Login from \"./Login.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userNameAlreadySelected: false\n    };\n    this.onUsernameSelect = this.onUsernameSelect.bind(this);\n  }\n\n  onUsernameSelect(username) {\n    this.setState({\n      userNameAlreadySelected: true\n    });\n    socket.auth = {\n      username\n    };\n    socket.connect();\n  }\n\n  componentDidMount() {\n    const sessionID = localStorage.getItem(\"sessionID\");\n\n    if (sessionID) {\n      this.setState({\n        userNameAlreadySelected: true\n      });\n      socket.auth = {\n        sessionID\n      };\n      socket.connect();\n    }\n\n    socket.on(\"session\", ({\n      sessionID,\n      userID\n    }) => {\n      // attach the session ID to the next reconnection attempts\n      socket.auth = {\n        sessionID\n      }; // store it in the localStorage\n\n      localStorage.setItem(\"sessionID\", sessionID); // save the ID of the user\n\n      socket.userID = userID;\n    });\n    socket.on(\"connect_error\", err => {\n      if (err.message === \"invalid username\") {\n        this.setState({\n          userNameAlreadySelected: false\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"connect_error\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.userNameAlreadySelected ? /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 50\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {\n        onUsernameSelect: this.onUsernameSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/samarpan/Semester Materials/BCSE-III-Assignments/6th Semester/Internet tech/Assignment 2/Bitanu/client/src/components/Home.js"],"names":["socket","Chat","Login","React","Component","Home","constructor","props","state","userNameAlreadySelected","onUsernameSelect","bind","username","setState","auth","connect","componentDidMount","sessionID","localStorage","getItem","on","userID","setItem","err","message","componentWillUnmount","off","render"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,uBAAuB,EAAE;AADd,KAAb;AAGA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACDD,EAAAA,gBAAgB,CAACE,QAAD,EAAW;AACzB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,uBAAuB,EAAE;AAA3B,KAAd;AACAT,IAAAA,MAAM,CAACc,IAAP,GAAc;AAAEF,MAAAA;AAAF,KAAd;AACAZ,IAAAA,MAAM,CAACe,OAAP;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AAEA,QAAIF,SAAJ,EAAe;AACb,WAAKJ,QAAL,CAAc;AAACJ,QAAAA,uBAAuB,EAAG;AAA3B,OAAd;AACAT,MAAAA,MAAM,CAACc,IAAP,GAAc;AAAEG,QAAAA;AAAF,OAAd;AACAjB,MAAAA,MAAM,CAACe,OAAP;AACD;;AAEDf,IAAAA,MAAM,CAACoB,EAAP,CAAU,SAAV,EAAqB,CAAC;AAAEH,MAAAA,SAAF;AAAaI,MAAAA;AAAb,KAAD,KAA2B;AAC9C;AACArB,MAAAA,MAAM,CAACc,IAAP,GAAc;AAAEG,QAAAA;AAAF,OAAd,CAF8C,CAG9C;;AACAC,MAAAA,YAAY,CAACI,OAAb,CAAqB,WAArB,EAAkCL,SAAlC,EAJ8C,CAK9C;;AACAjB,MAAAA,MAAM,CAACqB,MAAP,GAAgBA,MAAhB;AACD,KAPD;AASArB,IAAAA,MAAM,CAACoB,EAAP,CAAU,eAAV,EAA4BG,GAAD,IAAS;AAClC,UAAIA,GAAG,CAACC,OAAJ,KAAgB,kBAApB,EAAwC;AACtC,aAAKX,QAAL,CAAc;AAACJ,UAAAA,uBAAuB,EAAG;AAA3B,SAAd;AACD;AACF,KAJD;AAMD;;AACDgB,EAAAA,oBAAoB,GAAG;AACrBzB,IAAAA,MAAM,CAAC0B,GAAP,CAAW,eAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBAAM,KAAKnB,KAAL,CAAWC,uBAAX,gBAAqC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAArC,gBAAgD,QAAC,KAAD;AAAO,QAAA,gBAAgB,EAAE,KAAKC;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA9CyC","sourcesContent":["import socket from \"../socket.js\";\nimport Chat from \"./Chat.js\";\nimport Login from \"./Login.js\";\n\nimport React, { Component } from \"react\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userNameAlreadySelected: false,\n    };\n    this.onUsernameSelect = this.onUsernameSelect.bind(this);\n  }\n  onUsernameSelect(username) {\n    this.setState({ userNameAlreadySelected: true });\n    socket.auth = { username };\n    socket.connect();\n  }\n\n  componentDidMount() {\n    const sessionID = localStorage.getItem(\"sessionID\");\n\n    if (sessionID) {\n      this.setState({userNameAlreadySelected : true});\n      socket.auth = { sessionID };\n      socket.connect();\n    }\n\n    socket.on(\"session\", ({ sessionID, userID }) => {\n      // attach the session ID to the next reconnection attempts\n      socket.auth = { sessionID };\n      // store it in the localStorage\n      localStorage.setItem(\"sessionID\", sessionID);\n      // save the ID of the user\n      socket.userID = userID;\n    });\n\n    socket.on(\"connect_error\", (err) => {\n      if (err.message === \"invalid username\") {\n        this.setState({userNameAlreadySelected : false});\n      }\n    });\n  \n  }\n  componentWillUnmount() {\n    socket.off(\"connect_error\");\n  }\n  render() {\n    return (\n      <div>{this.state.userNameAlreadySelected ? <Chat /> : <Login onUsernameSelect={this.onUsernameSelect} />}</div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}