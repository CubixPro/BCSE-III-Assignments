{"ast":null,"code":"var _jsxFileName = \"/home/samarpan/Semester Materials/BCSE-III-Assignments/6th Semester/Internet tech/Assignment 2/Bitanu/client/src/components/Chat.js\";\nimport React, { Component } from \"react\";\nimport socket from \"../socket.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedUser: null,\n      users: [],\n      value: \"\"\n    };\n  }\n\n  onMessage(content) {\n    if (this.state.selectedUser) {\n      socket.emit(\"unicast\", {\n        content,\n        to: this.state.selectedUser.userID\n      });\n      let user = this.state.selectedUser;\n      user.messages.push({\n        content,\n        fromSelf: true\n      });\n      this.setState({\n        selectedUser: user\n      });\n    }\n  }\n\n  onImageClick(e) {\n    e.preventDefault();\n    console.log(\"event \", e);\n\n    if (e.target.files && e.target.files.length > 0) {\n      let file = e.target.files[0];\n      let reader = new FileReader();\n      if (!reader) return;\n\n      reader.onload = event => {\n        socket.emit(\"img\", {\n          content: event.target.result,\n          to: this.state.selectedUser.userID,\n          image: true\n        });\n        let user = this.state.selectedUser;\n        user.messages.push({\n          content: event.target.result,\n          image: true,\n          fromSelf: true\n        });\n        this.setState({\n          selectedUser: user\n        });\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  onSelectUser(user) {\n    this.setState({\n      selectedUser: user\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.onMessage(this.state.value);\n  }\n\n  componentDidMount() {\n    socket.on(\"connect\", () => {\n      let currentUsers = this.state.users;\n      currentUsers.forEach(user => {\n        if (user.self) {\n          user.connected = true;\n        }\n      });\n      this.setState({\n        users: currentUsers\n      });\n    });\n    socket.on(\"disconnect\", () => {\n      let currentUsers = this.state.users;\n      currentUsers.forEach(user => {\n        if (user.self) {\n          user.connected = false;\n        }\n      });\n      this.setState({\n        users: currentUsers\n      });\n    });\n\n    const initReactiveProperties = user => {\n      user.connected = true;\n      user.messages = [];\n      user.hasNewMessages = false;\n    };\n\n    socket.on(\"users\", users => {\n      users.forEach(user => {\n        for (let i = 0; i < this.state.users.length; i++) {\n          if (this.state.users[i].userID === user.userID) return;\n        }\n\n        user.self = user.userID === socket.userID;\n        initReactiveProperties(user);\n        let currentUsers = this.state.users;\n        currentUsers.push(user);\n        this.setState({\n          users: currentUsers\n        });\n      });\n      this.setState({\n        users: users.sort((a, b) => {\n          if (a.self) return -1;\n          if (b.self) return 1;\n          if (a.username < b.username) return -1;\n          return a.username > b.username ? 1 : 0;\n        })\n      });\n    });\n    socket.on(\"user connected\", user => {\n      for (let i = 0; i < this.state.users.length; i++) {\n        if (this.state.users[i].userID === user.userID) return;\n      }\n\n      initReactiveProperties(user);\n      let currentUsers = this.state.users;\n      currentUsers.push(user);\n      this.setState({\n        users: currentUsers\n      });\n    });\n    socket.on(\"user disconnected\", id => {\n      let currentUsers = this.state.users;\n\n      for (let i = 0; i < currentUsers.length; i++) {\n        if (currentUsers[i].userID === id) {\n          currentUsers[i].connected = false;\n          break;\n        }\n      }\n\n      this.setState({\n        users: currentUsers\n      });\n    });\n    socket.on(\"unicast\", ({\n      content,\n      from\n    }) => {\n      let currentUsers = this.state.users;\n\n      for (let i = 0; i < currentUsers.length; i++) {\n        if (currentUsers[i].userID === from) {\n          currentUsers[i].messages.push({\n            content,\n            fromSelf: false\n          });\n          break;\n        }\n      }\n\n      this.setState({\n        users: currentUsers\n      });\n    });\n    socket.on(\"newimg\", ({\n      content,\n      image,\n      from,\n      to\n    }) => {\n      let currentUsers = this.state.users;\n\n      for (let i = 0; i < currentUsers.length; i++) {\n        const fromSelf = socket.userID === from;\n\n        if (currentUsers[i].userID === (fromSelf ? to : from)) {\n          currentUsers[i].messages.push({\n            content,\n            image,\n            fromSelf\n          });\n\n          if (currentUsers[i] !== this.state.selectedUser) {\n            currentUsers[i].hasNewMessages = true;\n          }\n\n          this.setState({\n            users: currentUsers\n          });\n          break;\n        }\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    socket.off(\"connect\");\n    socket.off(\"disconnect\");\n    socket.off(\"users\");\n    socket.off(\"user connected\");\n    socket.off(\"user disconnected\");\n    socket.off(\"unicast\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.userID, user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.onSelectUser(user),\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, `${user.userID}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.selectedUser && this.state.selectedUser.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: message.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  height: \"300px\",\n                  width: \"300px\"\n                },\n                src: `${message.content}`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 23\n            }, this) : message.content\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this.handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => this.handleChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sendImage\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"sendImage\",\n            type: \"file\",\n            value: \"\",\n            onChange: e => this.onImageClick(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/samarpan/Semester Materials/BCSE-III-Assignments/6th Semester/Internet tech/Assignment 2/Bitanu/client/src/components/Chat.js"],"names":["React","Component","socket","Chat","constructor","props","state","selectedUser","users","value","onMessage","content","emit","to","userID","user","messages","push","fromSelf","setState","onImageClick","e","preventDefault","console","log","target","files","length","file","reader","FileReader","onload","event","result","image","readAsDataURL","onSelectUser","handleChange","handleSubmit","componentDidMount","on","currentUsers","forEach","self","connected","initReactiveProperties","hasNewMessages","i","sort","a","b","username","id","from","componentWillUnmount","off","render","map","message","index","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport socket from \"../socket.js\";\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedUser: null,\n      users: [],\n      value: \"\",\n    };\n  }\n\n  onMessage(content) {\n    if (this.state.selectedUser) {\n      socket.emit(\"unicast\", {\n        content,\n        to: this.state.selectedUser.userID,\n      });\n      let user = this.state.selectedUser;\n      user.messages.push({ content, fromSelf: true });\n      this.setState({ selectedUser: user });\n    }\n  }\n  onImageClick(e) {\n    e.preventDefault();\n    console.log(\"event \", e);\n    if (e.target.files && e.target.files.length > 0) {\n      let file = e.target.files[0];\n      let reader = new FileReader();\n      if (!reader) return;\n      reader.onload = (event) => {\n        socket.emit(\"img\", {\n          content: event.target.result,\n          to: this.state.selectedUser.userID,\n          image: true,\n        });\n        let user = this.state.selectedUser;\n        user.messages.push({\n          content: event.target.result,\n          image: true,\n          fromSelf: true,\n        });\n        this.setState({ selectedUser: user });\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  onSelectUser(user) {\n    this.setState({ selectedUser: user });\n  }\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    this.onMessage(this.state.value);\n  }\n  componentDidMount() {\n    socket.on(\"connect\", () => {\n      let currentUsers = this.state.users;\n      currentUsers.forEach((user) => {\n        if (user.self) {\n          user.connected = true;\n        }\n      });\n      this.setState({ users: currentUsers });\n    });\n\n    socket.on(\"disconnect\", () => {\n      let currentUsers = this.state.users;\n      currentUsers.forEach((user) => {\n        if (user.self) {\n          user.connected = false;\n        }\n      });\n      this.setState({ users: currentUsers });\n    });\n\n    const initReactiveProperties = (user) => {\n      user.connected = true;\n      user.messages = [];\n      user.hasNewMessages = false;\n    };\n\n    socket.on(\"users\", (users) => {\n      users.forEach((user) => {\n        for(let i=0;i<this.state.users.length;i++){\n          if (this.state.users[i].userID===user.userID)\n            return;\n        }\n        user.self = user.userID === socket.userID;\n        initReactiveProperties(user);\n        let currentUsers = this.state.users;\n        currentUsers.push(user);\n        this.setState({users: currentUsers});\n      });\n      this.setState({\n        users: users.sort((a, b) => {\n          if (a.self) return -1;\n          if (b.self) return 1;\n          if (a.username < b.username) return -1;\n          return a.username > b.username ? 1 : 0;\n        }),\n      });\n    });\n\n    socket.on(\"user connected\", (user) => {\n      for(let i=0;i<this.state.users.length;i++){\n        if (this.state.users[i].userID===user.userID)\n          return;\n      }\n      initReactiveProperties(user);\n      let currentUsers = this.state.users;\n      currentUsers.push(user);\n      this.setState({ users: currentUsers });\n    });\n\n    socket.on(\"user disconnected\", (id) => {\n      let currentUsers = this.state.users;\n      for (let i = 0; i < currentUsers.length; i++) {\n        if (currentUsers[i].userID === id) {\n          currentUsers[i].connected = false;\n          break;\n        }\n      }\n      this.setState({ users: currentUsers });\n    });\n\n    socket.on(\"unicast\", ({ content, from }) => {\n      let currentUsers = this.state.users;\n\n      for (let i = 0; i < currentUsers.length; i++) {\n        if (currentUsers[i].userID === from) {\n          currentUsers[i].messages.push({\n            content,\n            fromSelf: false,\n          });\n          break;\n        }\n      }\n      this.setState({ users: currentUsers });\n    });\n    \n    socket.on(\"newimg\", ({ content, image, from, to }) => {\n      let currentUsers = this.state.users;\n\n      for (let i = 0; i < currentUsers.length; i++) {\n        const fromSelf = socket.userID === from;\n        if (currentUsers[i].userID === (fromSelf ? to : from)) {\n          currentUsers[i].messages.push({\n            content,\n            image,\n            fromSelf,\n          });\n          if (currentUsers[i] !== this.state.selectedUser) {\n            currentUsers[i].hasNewMessages = true;\n          }\n          this.setState({ users: currentUsers });\n          break;\n        }\n      }\n    });\n   \n  }\n  componentWillUnmount() {\n    socket.off(\"connect\");\n    socket.off(\"disconnect\");\n    socket.off(\"users\");\n    socket.off(\"user connected\");\n    socket.off(\"user disconnected\");\n    socket.off(\"unicast\");\n\n  }\n  render() {\n    return (\n      <div style={{}}>\n        <ul>\n          {this.state.users.map((user) => (\n            <li key={`${user.userID}`}>\n              {user.userID}\n              {user.username}\n              <button onClick={() => this.onSelectUser(user)}>Select</button>\n            </li>\n          ))}\n        </ul>\n        <div>\n          <ul>\n            {this.state.selectedUser &&\n              this.state.selectedUser.messages.map((message, index) => (\n                <li key={index}>{message.image ? (\n                      <div>\n                        <img\n                          style={{ height: \"300px\", width: \"300px\" }}\n                          src={`${message.content}`}\n                          alt=\"\"\n                        />\n                      </div>\n                    ) : (\n                      message.content\n                    )}</li>\n              ))}\n          </ul>\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <label>\n              Message:\n              <input type=\"text\" onChange={(e) => this.handleChange(e)} />\n            </label>\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n        <label htmlFor=\"sendImage\">\n                <input\n                  id=\"sendImage\"\n                  type=\"file\"\n                  value=\"\"\n                  onChange={(e) => this.onImageClick(e)}\n        />\n        </label>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}